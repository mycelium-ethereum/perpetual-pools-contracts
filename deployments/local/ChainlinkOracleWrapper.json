{
    "address": "0x27c3147bCA7Df53D141e005136d6e193A6A03FC2",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_oracle",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "int256",
                    "name": "wad",
                    "type": "int256"
                }
            ],
            "name": "fromWad",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPrice",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "oracle",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "scaler",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_oracle",
                    "type": "address"
                }
            ],
            "name": "setOracle",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "transactionHash": "0x101a85377052f4ba5a890548b8cb37c146c6b3466a0a07af65d22d5baafff004",
    "receipt": {
        "to": null,
        "from": "0xE92470F13c49e7cC38160D01f60fD80E2f7c2c85",
        "contractAddress": "0x27c3147bCA7Df53D141e005136d6e193A6A03FC2",
        "transactionIndex": 0,
        "gasUsed": "1095878",
        "logsBloom": "0x000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000040000000000000000000000000a0020000000000000000800000100000000000000000000000400400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020020000000000000000000000000000000000000000000000000000000000000000000",
        "blockHash": "0xca66c2a56a722404f4bac2ecd8b05cdec6ca8dca00b300a94489140a6d81c060",
        "transactionHash": "0x101a85377052f4ba5a890548b8cb37c146c6b3466a0a07af65d22d5baafff004",
        "logs": [
            {
                "transactionIndex": 0,
                "blockNumber": 46,
                "transactionHash": "0x101a85377052f4ba5a890548b8cb37c146c6b3466a0a07af65d22d5baafff004",
                "address": "0x27c3147bCA7Df53D141e005136d6e193A6A03FC2",
                "topics": [
                    "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                    "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "0x000000000000000000000000e92470f13c49e7cc38160d01f60fd80e2f7c2c85"
                ],
                "data": "0x",
                "logIndex": 0,
                "blockHash": "0xca66c2a56a722404f4bac2ecd8b05cdec6ca8dca00b300a94489140a6d81c060"
            }
        ],
        "blockNumber": 46,
        "cumulativeGasUsed": "1095878",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x2B91131266556e3Cb1B882A68100FA4C0859a915"],
    "solcInputHash": "af6ebe07ce884d4b500c593018d7f9ea",
    "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"wad\",\"type\":\"int256\"}],\"name\":\"fromWad\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaler\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setOracle(address)\":{\"params\":{\"_oracle\":\"New address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"The oracle management contract for chainlink V3 oracles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fromWad(int256)\":{\"notice\":\"Converts from a WAD value to a raw value based on the decimals in the feed\"},\"getPrice()\":{\"notice\":\"Returns the oracle price in WAD format\"},\"oracle()\":{\"notice\":\"The address of the feed oracle\"},\"setOracle(address)\":{\"notice\":\"Sets the address of the underlying oracle and related information\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/implementation/ChainlinkOracleWrapper.sol\":\"ChainlinkOracleWrapper\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer()\\n    external\\n    view\\n    returns (\\n      int256\\n    );\\n  \\n  function latestTimestamp()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  function latestRound()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  function getAnswer(\\n    uint256 roundId\\n  )\\n    external\\n    view\\n    returns (\\n      int256\\n    );\\n\\n  function getTimestamp(\\n    uint256 roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  event AnswerUpdated(\\n    int256 indexed current,\\n    uint256 indexed roundId,\\n    uint256 updatedAt\\n  );\\n\\n  event NewRound(\\n    uint256 indexed roundId,\\n    address indexed startedBy,\\n    uint256 startedAt\\n  );\\n}\\n\",\"keccak256\":\"0x1a5dc81544a6479f64437a8aca22c869769dd54ee3522c7ef5ebae0d329a28f0\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AggregatorInterface.sol\\\";\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface\\n{\\n}\\n\",\"keccak256\":\"0xe8f8d98b515366730824d24269c7267eee7f0288cf737db8659acbb0c751eb53\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"contracts/implementation/ChainlinkOracleWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport \\\"../interfaces/IOracleWrapper.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\\\";\\n\\n/// @title The oracle management contract for chainlink V3 oracles\\ncontract ChainlinkOracleWrapper is IOracleWrapper, Ownable {\\n    // #### Globals\\n    /**\\n     * @notice The address of the feed oracle\\n     */\\n    address public override oracle;\\n    uint256 private constant MAX_DECIMALS = 18;\\n    int256 public scaler;\\n\\n    // #### Functions\\n    constructor(address _oracle) {\\n        setOracle(_oracle);\\n    }\\n\\n    /**\\n     * @notice Sets the address of the underlying oracle and related information\\n     * @param _oracle New address\\n     */\\n    function setOracle(address _oracle) public override onlyOwner {\\n        require(_oracle != address(0), \\\"Oracle cannot be 0 address\\\");\\n        oracle = _oracle;\\n        // reset the scaler for consistency\\n        uint8 _decimals = AggregatorV2V3Interface(oracle).decimals();\\n        require(_decimals <= MAX_DECIMALS, \\\"COA: too many decimals\\\");\\n        // scaler is always <= 10^18 and >= 1 so this cast is safe\\n        scaler = int256(10**(MAX_DECIMALS - _decimals));\\n    }\\n\\n    /**\\n     * @notice Returns the oracle price in WAD format\\n     */\\n    function getPrice() external view override returns (int256) {\\n        (\\n            uint80 roundID,\\n            int256 price,\\n            uint256 startedAt,\\n            uint256 timeStamp,\\n            uint80 answeredInRound\\n        ) = AggregatorV2V3Interface(oracle).latestRoundData();\\n        require(answeredInRound >= roundID, \\\"COA: Stale answer\\\");\\n        require(timeStamp != 0, \\\"COA: Round incomplete\\\");\\n        return toWad(price);\\n    }\\n\\n    /**\\n     * @notice Converts a raw value to a WAD value based on the decimals in the feed\\n     * @dev This allows consistency for oracles used throughout the protocol\\n     *      and allows oracles to have their decimals changed without affecting\\n     *      the market itself\\n     */\\n    function toWad(int256 raw) internal view returns (int256) {\\n        return raw * scaler;\\n    }\\n\\n    /**\\n     * @notice Converts from a WAD value to a raw value based on the decimals in the feed\\n     */\\n    function fromWad(int256 wad) external view override returns (int256) {\\n        return wad / scaler;\\n    }\\n}\\n\",\"keccak256\":\"0xcfaa0b0b0f672f0a0b8aa761394f11d0b069f8cfe3346e9ee8c3eee8401f7783\",\"license\":\"MIT\"},\"contracts/interfaces/IOracleWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\n/// @title The oracle wrapper contract interface\\ninterface IOracleWrapper {\\n    function oracle() external view returns (address);\\n\\n    // #### Functions\\n    /**\\n     * @notice Sets the oracle for a given market\\n     * @dev Should be secured, ideally only allowing the PoolKeeper to access\\n     * @param _oracle The oracle to set for the market\\n     */\\n    function setOracle(address _oracle) external;\\n\\n    /**\\n     * @notice Returns the current price for the asset in question\\n     * @return The latest price\\n     */\\n    function getPrice() external view returns (int256);\\n\\n    /**\\n     * @notice Converts from a WAD to normal value\\n     * @return Converted non-WAD value\\n     */\\n    function fromWad(int256 wad) external view returns (int256);\\n}\\n\",\"keccak256\":\"0xf1c77aed418b9a295b557c93a643c7ff0d449ff84213effc6bd108faa68a4a74\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60806040523480156200001157600080fd5b5060405162001983380380620019838339818101604052810190620000379190620003f1565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200013b60201b60201c565b506200084f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200014b6200006f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001716200039a60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620001ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001c190620004ca565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000234906200050e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620002e957600080fd5b505afa158015620002fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000324919062000423565b905060128160ff16111562000370576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200036790620004ec565b60405180910390fd5b8060ff166012620003829190620006d9565b600a6200039091906200059c565b6002819055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050620003d4816200081b565b92915050565b600081519050620003eb8162000835565b92915050565b6000602082840312156200040a57620004096200078e565b5b60006200041a84828501620003c3565b91505092915050565b6000602082840312156200043c576200043b6200078e565b5b60006200044c84828501620003da565b91505092915050565b60006200046460208362000530565b91506200047182620007a0565b602082019050919050565b60006200048b60168362000530565b91506200049882620007c9565b602082019050919050565b6000620004b2601a8362000530565b9150620004bf82620007f2565b602082019050919050565b60006020820190508181036000830152620004e58162000455565b9050919050565b6000602082019050818103600083015262000507816200047c565b9050919050565b600060208201905081810360008301526200052981620004a3565b9050919050565b600082825260208201905092915050565b6000808291508390505b600185111562000593578086048111156200056b576200056a6200075f565b5b60018516156200057b5780820291505b80810290506200058b8562000793565b94506200054b565b94509492505050565b6000620005a98262000748565b9150620005b68362000748565b9250620005e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620005ed565b905092915050565b600082620005ff5760019050620006d2565b816200060f5760009050620006d2565b8160018114620006285760028114620006335762000669565b6001915050620006d2565b60ff8411156200064857620006476200075f565b5b8360020a9150848211156200066257620006616200075f565b5b50620006d2565b5060208310610133831016604e8410600b8410161715620006a35782820a9050838111156200069d576200069c6200075f565b5b620006d2565b620006b2848484600162000541565b92509050818404811115620006cc57620006cb6200075f565b5b81810290505b9392505050565b6000620006e68262000748565b9150620006f38362000748565b9250828210156200070957620007086200075f565b5b828203905092915050565b6000620007218262000728565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b60008160011c9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f434f413a20746f6f206d616e7920646563696d616c7300000000000000000000600082015250565b7f4f7261636c652063616e6e6f7420626520302061646472657373000000000000600082015250565b620008268162000714565b81146200083257600080fd5b50565b620008408162000752565b81146200084c57600080fd5b50565b611124806200085f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637dc0d1d01161005b5780637dc0d1d0146101015780638da5cb5b1461011f57806398d5fdca1461013d578063f2fde38b1461015b57610088565b80633c1e6ff51461008d578063412ad1cc146100ab578063715018a6146100db5780637adbf973146100e5575b600080fd5b610095610177565b6040516100a29190610a74565b60405180910390f35b6100c560048036038101906100c09190610894565b61017d565b6040516100d29190610a74565b60405180910390f35b6100e3610194565b005b6100ff60048036038101906100fa9190610867565b61021c565b005b61010961045a565b6040516101169190610a59565b60405180910390f35b610127610480565b6040516101349190610a59565b60405180910390f35b6101456104a9565b6040516101529190610a74565b60405180910390f35b61017560048036038101906101709190610867565b61060e565b005b60025481565b60006002548261018d9190610b60565b9050919050565b61019c610706565b73ffffffffffffffffffffffffffffffffffffffff166101ba610480565b73ffffffffffffffffffffffffffffffffffffffff1614610210576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020790610aef565b60405180910390fd5b61021a600061070e565b565b610224610706565b73ffffffffffffffffffffffffffffffffffffffff16610242610480565b73ffffffffffffffffffffffffffffffffffffffff1614610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610aef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610b2f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103b357600080fd5b505afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb919061093c565b905060128160ff161115610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90610b0f565b60405180910390fd5b8060ff1660126104449190610e52565b600a6104509190610c1d565b6002819055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561051a57600080fd5b505afa15801561052e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055291906108c1565b945094509450945094508469ffffffffffffffffffff168169ffffffffffffffffffff1610156105b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ae90610aaf565b60405180910390fd5b60008214156105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290610acf565b60405180910390fd5b610604846107d2565b9550505050505090565b610616610706565b73ffffffffffffffffffffffffffffffffffffffff16610634610480565b73ffffffffffffffffffffffffffffffffffffffff161461068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190610aef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f190610a8f565b60405180910390fd5b6107038161070e565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600254826107e29190610d3b565b9050919050565b6000813590506107f88161107b565b92915050565b60008135905061080d81611092565b92915050565b60008151905061082281611092565b92915050565b600081519050610837816110a9565b92915050565b60008151905061084c816110d7565b92915050565b600081519050610861816110c0565b92915050565b60006020828403121561087d5761087c610f4d565b5b600061088b848285016107e9565b91505092915050565b6000602082840312156108aa576108a9610f4d565b5b60006108b8848285016107fe565b91505092915050565b600080600080600060a086880312156108dd576108dc610f4d565b5b60006108eb8882890161083d565b95505060206108fc88828901610813565b945050604061090d88828901610828565b935050606061091e88828901610828565b925050608061092f8882890161083d565b9150509295509295909350565b60006020828403121561095257610951610f4d565b5b600061096084828501610852565b91505092915050565b61097281610e86565b82525050565b61098181610e98565b82525050565b6000610994602683610b4f565b915061099f82610f5f565b604082019050919050565b60006109b7601183610b4f565b91506109c282610fae565b602082019050919050565b60006109da601583610b4f565b91506109e582610fd7565b602082019050919050565b60006109fd602083610b4f565b9150610a0882611000565b602082019050919050565b6000610a20601683610b4f565b9150610a2b82611029565b602082019050919050565b6000610a43601a83610b4f565b9150610a4e82611052565b602082019050919050565b6000602082019050610a6e6000830184610969565b92915050565b6000602082019050610a896000830184610978565b92915050565b60006020820190508181036000830152610aa881610987565b9050919050565b60006020820190508181036000830152610ac8816109aa565b9050919050565b60006020820190508181036000830152610ae8816109cd565b9050919050565b60006020820190508181036000830152610b08816109f0565b9050919050565b60006020820190508181036000830152610b2881610a13565b9050919050565b60006020820190508181036000830152610b4881610a36565b9050919050565b600082825260208201905092915050565b6000610b6b82610e98565b9150610b7683610e98565b925082610b8657610b85610f1e565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610bbf57610bbe610eef565b5b828205905092915050565b6000808291508390505b6001851115610c1457808604811115610bf057610bef610eef565b5b6001851615610bff5780820291505b8081029050610c0d85610f52565b9450610bd4565b94509492505050565b6000610c2882610ec2565b9150610c3383610ec2565b9250610c607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610c68565b905092915050565b600082610c785760019050610d34565b81610c865760009050610d34565b8160018114610c9c5760028114610ca657610cd5565b6001915050610d34565b60ff841115610cb857610cb7610eef565b5b8360020a915084821115610ccf57610cce610eef565b5b50610d34565b5060208310610133831016604e8410600b8410161715610d0a5782820a905083811115610d0557610d04610eef565b5b610d34565b610d178484846001610bca565b92509050818404811115610d2e57610d2d610eef565b5b81810290505b9392505050565b6000610d4682610e98565b9150610d5183610e98565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9057610d8f610eef565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dcd57610dcc610eef565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e0a57610e09610eef565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e4757610e46610eef565b5b828202905092915050565b6000610e5d82610ec2565b9150610e6883610ec2565b925082821015610e7b57610e7a610eef565b5b828203905092915050565b6000610e9182610ea2565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f434f413a205374616c6520616e73776572000000000000000000000000000000600082015250565b7f434f413a20526f756e6420696e636f6d706c6574650000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f434f413a20746f6f206d616e7920646563696d616c7300000000000000000000600082015250565b7f4f7261636c652063616e6e6f7420626520302061646472657373000000000000600082015250565b61108481610e86565b811461108f57600080fd5b50565b61109b81610e98565b81146110a657600080fd5b50565b6110b281610ec2565b81146110bd57600080fd5b50565b6110c981610ecc565b81146110d457600080fd5b50565b6110e081610ed9565b81146110eb57600080fd5b5056fea264697066735822122049b5a4938a7f3c57fdb922dd103471ff24a6095e2e0d8249749e39b8e9898ae764736f6c63430008060033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80637dc0d1d01161005b5780637dc0d1d0146101015780638da5cb5b1461011f57806398d5fdca1461013d578063f2fde38b1461015b57610088565b80633c1e6ff51461008d578063412ad1cc146100ab578063715018a6146100db5780637adbf973146100e5575b600080fd5b610095610177565b6040516100a29190610a74565b60405180910390f35b6100c560048036038101906100c09190610894565b61017d565b6040516100d29190610a74565b60405180910390f35b6100e3610194565b005b6100ff60048036038101906100fa9190610867565b61021c565b005b61010961045a565b6040516101169190610a59565b60405180910390f35b610127610480565b6040516101349190610a59565b60405180910390f35b6101456104a9565b6040516101529190610a74565b60405180910390f35b61017560048036038101906101709190610867565b61060e565b005b60025481565b60006002548261018d9190610b60565b9050919050565b61019c610706565b73ffffffffffffffffffffffffffffffffffffffff166101ba610480565b73ffffffffffffffffffffffffffffffffffffffff1614610210576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020790610aef565b60405180910390fd5b61021a600061070e565b565b610224610706565b73ffffffffffffffffffffffffffffffffffffffff16610242610480565b73ffffffffffffffffffffffffffffffffffffffff1614610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610aef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ff90610b2f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103b357600080fd5b505afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb919061093c565b905060128160ff161115610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90610b0f565b60405180910390fd5b8060ff1660126104449190610e52565b600a6104509190610c1d565b6002819055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561051a57600080fd5b505afa15801561052e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055291906108c1565b945094509450945094508469ffffffffffffffffffff168169ffffffffffffffffffff1610156105b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ae90610aaf565b60405180910390fd5b60008214156105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290610acf565b60405180910390fd5b610604846107d2565b9550505050505090565b610616610706565b73ffffffffffffffffffffffffffffffffffffffff16610634610480565b73ffffffffffffffffffffffffffffffffffffffff161461068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190610aef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f190610a8f565b60405180910390fd5b6107038161070e565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600254826107e29190610d3b565b9050919050565b6000813590506107f88161107b565b92915050565b60008135905061080d81611092565b92915050565b60008151905061082281611092565b92915050565b600081519050610837816110a9565b92915050565b60008151905061084c816110d7565b92915050565b600081519050610861816110c0565b92915050565b60006020828403121561087d5761087c610f4d565b5b600061088b848285016107e9565b91505092915050565b6000602082840312156108aa576108a9610f4d565b5b60006108b8848285016107fe565b91505092915050565b600080600080600060a086880312156108dd576108dc610f4d565b5b60006108eb8882890161083d565b95505060206108fc88828901610813565b945050604061090d88828901610828565b935050606061091e88828901610828565b925050608061092f8882890161083d565b9150509295509295909350565b60006020828403121561095257610951610f4d565b5b600061096084828501610852565b91505092915050565b61097281610e86565b82525050565b61098181610e98565b82525050565b6000610994602683610b4f565b915061099f82610f5f565b604082019050919050565b60006109b7601183610b4f565b91506109c282610fae565b602082019050919050565b60006109da601583610b4f565b91506109e582610fd7565b602082019050919050565b60006109fd602083610b4f565b9150610a0882611000565b602082019050919050565b6000610a20601683610b4f565b9150610a2b82611029565b602082019050919050565b6000610a43601a83610b4f565b9150610a4e82611052565b602082019050919050565b6000602082019050610a6e6000830184610969565b92915050565b6000602082019050610a896000830184610978565b92915050565b60006020820190508181036000830152610aa881610987565b9050919050565b60006020820190508181036000830152610ac8816109aa565b9050919050565b60006020820190508181036000830152610ae8816109cd565b9050919050565b60006020820190508181036000830152610b08816109f0565b9050919050565b60006020820190508181036000830152610b2881610a13565b9050919050565b60006020820190508181036000830152610b4881610a36565b9050919050565b600082825260208201905092915050565b6000610b6b82610e98565b9150610b7683610e98565b925082610b8657610b85610f1e565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610bbf57610bbe610eef565b5b828205905092915050565b6000808291508390505b6001851115610c1457808604811115610bf057610bef610eef565b5b6001851615610bff5780820291505b8081029050610c0d85610f52565b9450610bd4565b94509492505050565b6000610c2882610ec2565b9150610c3383610ec2565b9250610c607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610c68565b905092915050565b600082610c785760019050610d34565b81610c865760009050610d34565b8160018114610c9c5760028114610ca657610cd5565b6001915050610d34565b60ff841115610cb857610cb7610eef565b5b8360020a915084821115610ccf57610cce610eef565b5b50610d34565b5060208310610133831016604e8410600b8410161715610d0a5782820a905083811115610d0557610d04610eef565b5b610d34565b610d178484846001610bca565b92509050818404811115610d2e57610d2d610eef565b5b81810290505b9392505050565b6000610d4682610e98565b9150610d5183610e98565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9057610d8f610eef565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dcd57610dcc610eef565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e0a57610e09610eef565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e4757610e46610eef565b5b828202905092915050565b6000610e5d82610ec2565b9150610e6883610ec2565b925082821015610e7b57610e7a610eef565b5b828203905092915050565b6000610e9182610ea2565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f434f413a205374616c6520616e73776572000000000000000000000000000000600082015250565b7f434f413a20526f756e6420696e636f6d706c6574650000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f434f413a20746f6f206d616e7920646563696d616c7300000000000000000000600082015250565b7f4f7261636c652063616e6e6f7420626520302061646472657373000000000000600082015250565b61108481610e86565b811461108f57600080fd5b50565b61109b81610e98565b81146110a657600080fd5b50565b6110b281610ec2565b81146110bd57600080fd5b50565b6110c981610ecc565b81146110d457600080fd5b50565b6110e081610ed9565b81146110eb57600080fd5b5056fea264697066735822122049b5a4938a7f3c57fdb922dd103471ff24a6095e2e0d8249749e39b8e9898ae764736f6c63430008060033",
    "devdoc": {
        "kind": "dev",
        "methods": {
            "owner()": {
                "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "setOracle(address)": {
                "params": {
                    "_oracle": "New address"
                }
            },
            "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
        },
        "title": "The oracle management contract for chainlink V3 oracles",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fromWad(int256)": {
                "notice": "Converts from a WAD value to a raw value based on the decimals in the feed"
            },
            "getPrice()": {
                "notice": "Returns the oracle price in WAD format"
            },
            "oracle()": {
                "notice": "The address of the feed oracle"
            },
            "setOracle(address)": {
                "notice": "Sets the address of the underlying oracle and related information"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 110,
                "contract": "contracts/implementation/ChainlinkOracleWrapper.sol:ChainlinkOracleWrapper",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
            },
            {
                "astId": 6729,
                "contract": "contracts/implementation/ChainlinkOracleWrapper.sol:ChainlinkOracleWrapper",
                "label": "oracle",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
            },
            {
                "astId": 6734,
                "contract": "contracts/implementation/ChainlinkOracleWrapper.sol:ChainlinkOracleWrapper",
                "label": "scaler",
                "offset": 0,
                "slot": "2",
                "type": "t_int256"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_int256": {
                "encoding": "inplace",
                "label": "int256",
                "numberOfBytes": "32"
            }
        }
    }
}
