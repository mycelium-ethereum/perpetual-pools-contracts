{
    "address": "0x1eAC9138330060fBF29930CF0F67BE217917A556",
    "abi": [
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "description",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "latestRoundData",
            "outputs": [
                {
                    "internalType": "uint80",
                    "name": "",
                    "type": "uint80"
                },
                {
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint80",
                    "name": "",
                    "type": "uint80"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "price",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint8",
                    "name": "_decimals",
                    "type": "uint8"
                }
            ],
            "name": "setDecimals",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "int256",
                    "name": "_price",
                    "type": "int256"
                }
            ],
            "name": "setPrice",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "version",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "transactionHash": "0xf0b139d5ea678a8ae04fee534fa1ed58aaf66cb67a1a67d3b1723f7360e69eab",
    "receipt": {
        "to": null,
        "from": "0xE92470F13c49e7cC38160D01f60fD80E2f7c2c85",
        "contractAddress": "0x1eAC9138330060fBF29930CF0F67BE217917A556",
        "transactionIndex": 0,
        "gasUsed": "476539",
        "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "blockHash": "0x7d5c2382bc50ae443ca4a5d3deacc4b8dad97ba393e3ca8b2807e7fb564830e3",
        "transactionHash": "0xf0b139d5ea678a8ae04fee534fa1ed58aaf66cb67a1a67d3b1723f7360e69eab",
        "logs": [],
        "blockNumber": 1,
        "cumulativeGasUsed": "476539",
        "status": 1,
        "byzantium": true
    },
    "args": [],
    "solcInputHash": "af6ebe07ce884d4b500c593018d7f9ea",
    "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"setDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The following is a mock Chainlink Price Feed Implementation.      It is used purely for the purpose of testing & not to be used in production\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"latestRoundData()\":{\"notice\":\"Returns round data with the set price as the answer.         Other fields are returned as mock data to simulate a         successful round.\"},\"setDecimals(uint8)\":{\"notice\":\"Sets the decimals returned in the answer\"},\"setPrice(int256)\":{\"notice\":\"Sets the answer that is returned by the Oracle when latestRoundData is called\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test-utilities/TestChainlinkOracle.sol\":\"TestChainlinkOracle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test-utilities/TestChainlinkOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.6;\\n\\n/// @dev The following is a mock Chainlink Price Feed Implementation.\\n///      It is used purely for the purpose of testing & not to be used in production\\ncontract TestChainlinkOracle {\\n    int256 public price = 100000000;\\n    uint8 public decimals = 8; // default of 8 decimals for USD price feeds in the Chainlink ecosystem\\n    string public description = \\\"A mock Chainlink V3 Aggregator\\\";\\n    uint256 public version = 3; // Aggregator V3;\\n    uint80 private ROUND_ID = 1; // A mock round Id\\n\\n    /**\\n     * @notice Returns round data with the set price as the answer.\\n     *         Other fields are returned as mock data to simulate a\\n     *         successful round.\\n     */\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80,\\n            int256,\\n            uint256,\\n            uint256,\\n            uint80\\n        )\\n    {\\n        uint80 roundId = ROUND_ID;\\n        int256 answer = price;\\n        uint256 startedAt = 0;\\n        uint256 updatedAt = block.timestamp;\\n        uint80 answeredInRound = ROUND_ID;\\n\\n        return (roundId, answer, startedAt, updatedAt, answeredInRound);\\n    }\\n\\n    /**\\n     * @notice Sets the answer that is returned by the Oracle when latestRoundData is called\\n     */\\n    function setPrice(int256 _price) public {\\n        price = _price;\\n    }\\n\\n    /**\\n     * @notice Sets the decimals returned in the answer\\n     */\\n    function setDecimals(uint8 _decimals) external {\\n        decimals = _decimals;\\n    }\\n}\\n\",\"keccak256\":\"0x6c807925eebc45d6a8fb62f06be6570a47c738299c9f0c88c8298409d19d7ede\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
    "bytecode": "0x60806040526305f5e1006000556008600160006101000a81548160ff021916908360ff1602179055506040518060400160405280601e81526020017f41206d6f636b20436861696e6c696e6b2056332041676772656761746f720000815250600290805190602001906100739291906100b8565b50600380556001600460006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055503480156100b257600080fd5b506101bc565b8280546100c49061015b565b90600052602060002090601f0160209004810192826100e6576000855561012d565b82601f106100ff57805160ff191683800117855561012d565b8280016001018555821561012d579182015b8281111561012c578251825591602001919060010190610111565b5b50905061013a919061013e565b5090565b5b8082111561015757600081600090555060010161013f565b5090565b6000600282049050600182168061017357607f821691505b602082108114156101875761018661018d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6105b1806101cb6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637a1395aa1161005b5780637a1395aa146100dc578063a035b1fe146100f8578063f7a3080614610116578063feaf968c146101325761007d565b8063313ce5671461008257806354fd4d50146100a05780637284e416146100be575b600080fd5b61008a610154565b6040516100979190610435565b60405180910390f35b6100a8610167565b6040516100b591906103c7565b60405180910390f35b6100c661016d565b6040516100d391906103a5565b60405180910390f35b6100f660048036038101906100f191906102e8565b6101fb565b005b610100610219565b60405161010d919061038a565b60405180910390f35b610130600480360381019061012b91906102bb565b61021f565b005b61013a610229565b60405161014b9594939291906103e2565b60405180910390f35b600160009054906101000a900460ff1681565b60035481565b6002805461017a906104d6565b80601f01602080910402602001604051908101604052809291908181526020018280546101a6906104d6565b80156101f35780601f106101c8576101008083540402835291602001916101f3565b820191906000526020600020905b8154815290600101906020018083116101d657829003601f168201915b505050505081565b80600160006101000a81548160ff021916908360ff16021790555050565b60005481565b8060008190555050565b600080600080600080600460009054906101000a900469ffffffffffffffffffff1690506000805490506000804290506000600460009054906101000a900469ffffffffffffffffffff16905084848484849950995099509950995050505050509091929394565b6000813590506102a08161054d565b92915050565b6000813590506102b581610564565b92915050565b6000602082840312156102d1576102d0610537565b5b60006102df84828501610291565b91505092915050565b6000602082840312156102fe576102fd610537565b5b600061030c848285016102a6565b91505092915050565b61031e8161046c565b82525050565b600061032f82610450565b610339818561045b565b93506103498185602086016104a3565b6103528161053c565b840191505092915050565b61036681610476565b82525050565b6103758161048d565b82525050565b61038481610480565b82525050565b600060208201905061039f6000830184610315565b92915050565b600060208201905081810360008301526103bf8184610324565b905092915050565b60006020820190506103dc600083018461035d565b92915050565b600060a0820190506103f7600083018861036c565b6104046020830187610315565b610411604083018661035d565b61041e606083018561035d565b61042b608083018461036c565b9695505050505050565b600060208201905061044a600083018461037b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b60005b838110156104c15780820151818401526020810190506104a6565b838111156104d0576000848401525b50505050565b600060028204905060018216806104ee57607f821691505b6020821081141561050257610501610508565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b6105568161046c565b811461056157600080fd5b50565b61056d81610480565b811461057857600080fd5b5056fea2646970667358221220591294d894642d506fe61287b2cb4baf525bd65b1403c25d6245634b5d67280e64736f6c63430008060033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80637a1395aa1161005b5780637a1395aa146100dc578063a035b1fe146100f8578063f7a3080614610116578063feaf968c146101325761007d565b8063313ce5671461008257806354fd4d50146100a05780637284e416146100be575b600080fd5b61008a610154565b6040516100979190610435565b60405180910390f35b6100a8610167565b6040516100b591906103c7565b60405180910390f35b6100c661016d565b6040516100d391906103a5565b60405180910390f35b6100f660048036038101906100f191906102e8565b6101fb565b005b610100610219565b60405161010d919061038a565b60405180910390f35b610130600480360381019061012b91906102bb565b61021f565b005b61013a610229565b60405161014b9594939291906103e2565b60405180910390f35b600160009054906101000a900460ff1681565b60035481565b6002805461017a906104d6565b80601f01602080910402602001604051908101604052809291908181526020018280546101a6906104d6565b80156101f35780601f106101c8576101008083540402835291602001916101f3565b820191906000526020600020905b8154815290600101906020018083116101d657829003601f168201915b505050505081565b80600160006101000a81548160ff021916908360ff16021790555050565b60005481565b8060008190555050565b600080600080600080600460009054906101000a900469ffffffffffffffffffff1690506000805490506000804290506000600460009054906101000a900469ffffffffffffffffffff16905084848484849950995099509950995050505050509091929394565b6000813590506102a08161054d565b92915050565b6000813590506102b581610564565b92915050565b6000602082840312156102d1576102d0610537565b5b60006102df84828501610291565b91505092915050565b6000602082840312156102fe576102fd610537565b5b600061030c848285016102a6565b91505092915050565b61031e8161046c565b82525050565b600061032f82610450565b610339818561045b565b93506103498185602086016104a3565b6103528161053c565b840191505092915050565b61036681610476565b82525050565b6103758161048d565b82525050565b61038481610480565b82525050565b600060208201905061039f6000830184610315565b92915050565b600060208201905081810360008301526103bf8184610324565b905092915050565b60006020820190506103dc600083018461035d565b92915050565b600060a0820190506103f7600083018861036c565b6104046020830187610315565b610411604083018661035d565b61041e606083018561035d565b61042b608083018461036c565b9695505050505050565b600060208201905061044a600083018461037b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b60005b838110156104c15780820151818401526020810190506104a6565b838111156104d0576000848401525b50505050565b600060028204905060018216806104ee57607f821691505b6020821081141561050257610501610508565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b6105568161046c565b811461056157600080fd5b50565b61056d81610480565b811461057857600080fd5b5056fea2646970667358221220591294d894642d506fe61287b2cb4baf525bd65b1403c25d6245634b5d67280e64736f6c63430008060033",
    "devdoc": {
        "details": "The following is a mock Chainlink Price Feed Implementation.      It is used purely for the purpose of testing & not to be used in production",
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "latestRoundData()": {
                "notice": "Returns round data with the set price as the answer.         Other fields are returned as mock data to simulate a         successful round."
            },
            "setDecimals(uint8)": {
                "notice": "Sets the decimals returned in the answer"
            },
            "setPrice(int256)": {
                "notice": "Sets the answer that is returned by the Oracle when latestRoundData is called"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 10970,
                "contract": "contracts/test-utilities/TestChainlinkOracle.sol:TestChainlinkOracle",
                "label": "price",
                "offset": 0,
                "slot": "0",
                "type": "t_int256"
            },
            {
                "astId": 10973,
                "contract": "contracts/test-utilities/TestChainlinkOracle.sol:TestChainlinkOracle",
                "label": "decimals",
                "offset": 0,
                "slot": "1",
                "type": "t_uint8"
            },
            {
                "astId": 10976,
                "contract": "contracts/test-utilities/TestChainlinkOracle.sol:TestChainlinkOracle",
                "label": "description",
                "offset": 0,
                "slot": "2",
                "type": "t_string_storage"
            },
            {
                "astId": 10979,
                "contract": "contracts/test-utilities/TestChainlinkOracle.sol:TestChainlinkOracle",
                "label": "version",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
            },
            {
                "astId": 10982,
                "contract": "contracts/test-utilities/TestChainlinkOracle.sol:TestChainlinkOracle",
                "label": "ROUND_ID",
                "offset": 0,
                "slot": "4",
                "type": "t_uint80"
            }
        ],
        "types": {
            "t_int256": {
                "encoding": "inplace",
                "label": "int256",
                "numberOfBytes": "32"
            },
            "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            },
            "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
            },
            "t_uint80": {
                "encoding": "inplace",
                "label": "uint80",
                "numberOfBytes": "10"
            }
        }
    }
}
