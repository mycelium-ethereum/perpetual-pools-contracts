{
    "address": "0xF8f2A07D299c1683E8F06611733908D135700d14",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "previousAdminRole",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "newAdminRole",
                    "type": "bytes32"
                }
            ],
            "name": "RoleAdminChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleGranted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleRevoked",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "ADMIN",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "DEFAULT_ADMIN_ROLE",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "OPERATOR",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "assetOracles",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "marketCode",
                    "type": "string"
                }
            ],
            "name": "getPrice",
            "outputs": [
                {
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                }
            ],
            "name": "getRoleAdmin",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getRoleMember",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                }
            ],
            "name": "getRoleMemberCount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "grantRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "hasRole",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "renounceRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "revokeRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "marketCode",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "oracle",
                    "type": "address"
                }
            ],
            "name": "setOracle",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "transactionHash": "0x51d2aff96e6c8a4169883d2634daf7be6173386e36930831bd0f56124cac737e",
    "receipt": {
        "to": null,
        "from": "0x2f879D4C96c0E751A20F96fbCC21e266e0637254",
        "contractAddress": "0xF8f2A07D299c1683E8F06611733908D135700d14",
        "transactionIndex": 1,
        "gasUsed": "1190051",
        "logsBloom": "0x
        "blockHash": "0x5f08a4c5b6395f617c93376fbc7a03b335efbdc9bd8c7e8e4d5a8a63aeb5c60d",
        "transactionHash": "0x51d2aff96e6c8a4169883d2634daf7be6173386e36930831bd0f56124cac737e",
        "logs": [
            {
                "transactionIndex": 1,
                "blockNumber": 26392467,
                "transactionHash": "0x51d2aff96e6c8a4169883d2634daf7be6173386e36930831bd0f56124cac737e",
                "address": "0xF8f2A07D299c1683E8F06611733908D135700d14",
                "topics": [
                    "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
                    "0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
                    "0x0000000000000000000000002f879d4c96c0e751a20f96fbcc21e266e0637254",
                    "0x0000000000000000000000002f879d4c96c0e751a20f96fbcc21e266e0637254"
                ],
                "data": "0x",
                "logIndex": 1,
                "blockHash": "0x5f08a4c5b6395f617c93376fbc7a03b335efbdc9bd8c7e8e4d5a8a63aeb5c60d"
            },
            {
                "transactionIndex": 1,
                "blockNumber": 26392467,
                "transactionHash": "0x51d2aff96e6c8a4169883d2634daf7be6173386e36930831bd0f56124cac737e",
                "address": "0xF8f2A07D299c1683E8F06611733908D135700d14",
                "topics": [
                    "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
                    "0x523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c",
                    "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42"
                ],
                "data": "0x",
                "logIndex": 2,
                "blockHash": "0x5f08a4c5b6395f617c93376fbc7a03b335efbdc9bd8c7e8e4d5a8a63aeb5c60d"
            }
        ],
        "blockNumber": 26392467,
        "cumulativeGasUsed": "1247034",
        "status": 1,
        "byzantium": true
    },
    "args": [],
    "solcInputHash": "a2ec7e07fca8e553b102fcc1ce58ddd3",
    "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"assetOracles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketCode\",\"type\":\"string\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketCode\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPrice(string)\":{\"params\":{\"marketCode\":\"The market code for the asset to quote for.\"},\"returns\":{\"_0\":\"The latest price\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setOracle(string,address)\":{\"details\":\"Should be secured, ideally only allowing the PoolKeeper to access.\",\"params\":{\"marketCode\":\"The market code for the market.\",\"oracle\":\"The oracle to set for the market\"}}},\"stateVariables\":{\"assetOracles\":{\"details\":\"override in place for the getter function definition from the interface\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"OPERATOR()\":{\"notice\":\"Use the Operator role to restrict access to the setOracle function\"},\"assetOracles(string)\":{\"notice\":\"Format: Market code => oracle address. Market code looks like TSLA/USD+aDAI\"},\"getPrice(string)\":{\"notice\":\"Returns the current price for the asset in question\"},\"setOracle(string,address)\":{\"notice\":\"Sets the oracle for a given market\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/implementation/OracleWrapper.sol\":\"OracleWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.7/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer()\\n    external\\n    view\\n    returns (\\n      int256\\n    );\\n  \\n  function latestTimestamp()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  function latestRound()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  function getAnswer(\\n    uint256 roundId\\n  )\\n    external\\n    view\\n    returns (\\n      int256\\n    );\\n\\n  function getTimestamp(\\n    uint256 roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  event AnswerUpdated(\\n    int256 indexed current,\\n    uint256 indexed roundId,\\n    uint256 updatedAt\\n  );\\n\\n  event NewRound(\\n    uint256 indexed roundId,\\n    address indexed startedBy,\\n    uint256 startedAt\\n  );\\n}\\n\",\"keccak256\":\"0x8f764d57f6d3d8017ee2c261756b0c4845093134b167890cd65080a82de314e1\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\n\\nimport \\\"./AggregatorInterface.sol\\\";\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface\\n{\\n}\\n\",\"keccak256\":\"0xe77ec46d2fa2b5731df1222756756ee3922aaac5111b13b0ea6032f4b16ae043\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0x62c8752bb170233359e653c61d491d6a79fe1d7d7281377c5ac4e9c03ce811ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/EnumerableSet.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n    using Address for address;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\"},\"contracts/implementation/OracleWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"../interfaces/IOracleWrapper.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol\\\";\\n\\n/*\\n@title The oracle management contract\\n*/\\ncontract OracleWrapper is IOracleWrapper, AccessControl {\\n  // #### Globals\\n  /**\\n  @notice Format: Market code => oracle address. Market code looks like TSLA/USD+aDAI\\n  @dev override in place for the getter function definition from the interface\\n   */\\n  mapping(string => address) public override assetOracles;\\n\\n  // #### Roles\\n  /**\\n  @notice Use the Operator role to restrict access to the setOracle function\\n   */\\n  bytes32 public constant OPERATOR = keccak256(\\\"OPERATOR\\\");\\n  bytes32 public constant ADMIN = keccak256(\\\"ADMIN\\\");\\n\\n  // #### Functions\\n  constructor() {\\n    _setupRole(ADMIN, msg.sender);\\n    _setRoleAdmin(OPERATOR, ADMIN);\\n  }\\n\\n  function setOracle(string memory marketCode, address oracle)\\n    external\\n    override\\n    onlyOperator\\n  {\\n    require(oracle != address(0), \\\"Oracle cannot be 0 address\\\");\\n    assetOracles[marketCode] = oracle;\\n  }\\n\\n  function getPrice(string memory marketCode)\\n    external\\n    view\\n    override\\n    returns (int256)\\n  {\\n    (, int256 price, , uint256 timeStamp, ) =\\n      AggregatorV2V3Interface(assetOracles[marketCode]).latestRoundData();\\n    require(timeStamp > 0, \\\"Round not complete\\\");\\n    return price;\\n  }\\n\\n  // #### Modifiers\\n  modifier onlyOperator {\\n    require(hasRole(OPERATOR, msg.sender));\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x3df6d5261159034131ec728b526e99dd8735d7e236d183768eb2a7bfbddc2025\",\"license\":\"MIT\"},\"contracts/interfaces/IOracleWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.6;\\npragma abicoder v2;\\n\\n/**\\n@title The oracle management contract interface\\n*/\\ninterface IOracleWrapper {\\n  // #### Functions\\n  /**\\n    @notice Sets the oracle for a given market\\n    @dev Should be secured, ideally only allowing the PoolKeeper to access.\\n    @param marketCode The market code for the market.\\n    @param oracle The oracle to set for the market\\n   */\\n  function setOracle(string memory marketCode, address oracle) external;\\n\\n  /**\\n    @notice Returns the current price for the asset in question\\n    @param marketCode The market code for the asset to quote for.\\n    @return The latest price\\n     */\\n  function getPrice(string memory marketCode) external view returns (int256);\\n\\n  /**\\n    @notice Returns the oracle for a given market code\\n    @dev This is a convenience definition for the auto generated getter so you don't need to import the full contract to use it.\\n    @param marketCode The market code to look up\\n    @return The oracle address\\n */\\n  function assetOracles(string memory marketCode)\\n    external\\n    view\\n    returns (address);\\n}\\n\",\"keccak256\":\"0x8f11f055f55e0463aa2d7599e716bf761dde845e29069bba0f3dac22d0bbfe6b\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60806040523480156200001157600080fd5b50620000447fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42336200009c60201b60201c565b620000967f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42620000b260201b60201c565b62000294565b620000ae82826200011460201b60201c565b5050565b8060008084815260200190815260200160002060020154837fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a480600080848152602001908152602001600020600201819055505050565b6200014281600080858152602001908152602001600020600001620001b760201b620007c11790919060201c565b15620001b35762000158620001ef60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620001e7836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620001f760201b60201c565b905092915050565b600033905090565b60006200020b83836200027160201b60201c565b620002665782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506200026b565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6112c180620002a46000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639010d07c1161008c578063a217fddf11610066578063a217fddf14610224578063c982aa1714610242578063ca15c87314610272578063d547741f146102a2576100cf565b80639010d07c146101a657806391d14854146101d6578063983d273714610206576100cf565b8063248a9ca3146100d45780632970fdfa146101045780632a0acc6a146101205780632f2ff15d1461013e57806336568abe1461015a578063524f388914610176575b600080fd5b6100ee60048036038101906100e99190610ca3565b6102be565b6040516100fb9190610f99565b60405180910390f35b61011e60048036038101906101199190610d85565b6102dd565b005b6101286103e1565b6040516101359190610f99565b60405180910390f35b61015860048036038101906101539190610ccc565b610405565b005b610174600480360381019061016f9190610ccc565b61048e565b005b610190600480360381019061018b9190610d44565b610527565b60405161019d9190610fb4565b60405180910390f35b6101c060048036038101906101bb9190610d08565b61063c565b6040516101cd9190610f63565b60405180910390f35b6101f060048036038101906101eb9190610ccc565b61066d565b6040516101fd9190610f7e565b60405180910390f35b61020e61069e565b60405161021b9190610f99565b60405180910390f35b61022c6106c2565b6040516102399190610f99565b60405180910390f35b61025c60048036038101906102579190610d44565b6106c9565b6040516102699190610f63565b60405180910390f35b61028c60048036038101906102879190610ca3565b610712565b604051610299919061100f565b60405180910390f35b6102bc60048036038101906102b79190610ccc565b610738565b005b6000806000838152602001908152602001600020600201549050919050565b6103077f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c3361066d565b61031057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610fef565b60405180910390fd5b806001836040516103919190610f4c565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b61042b600080848152602001908152602001600020600201546104266107f1565b61066d565b610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806111fe602f913960400191505060405180910390fd5b61048a82826107f9565b5050565b6104966107f1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061125d602f913960400191505060405180910390fd5b610523828261088c565b5050565b600080600060018460405161053c9190610f4c565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105b057600080fd5b505afa1580156105c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e89190610dd9565b5093505092505060008111610632576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062990610fcf565b60405180910390fd5b8192505050919050565b60006106658260008086815260200190815260200160002060000161091f90919063ffffffff16565b905092915050565b60006106968260008086815260200190815260200160002060000161093990919063ffffffff16565b905092915050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b6000801b81565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610731600080848152602001908152602001600020600001610969565b9050919050565b61075e600080848152602001908152602001600020600201546107596107f1565b61066d565b6107b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061122d6030913960400191505060405180910390fd5b6107bd828261088c565b5050565b60006107e9836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61097e565b905092915050565b600033905090565b610820816000808581526020019081526020016000206000016107c190919063ffffffff16565b156108885761082d6107f1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6108b3816000808581526020019081526020016000206000016109ee90919063ffffffff16565b1561091b576108c06107f1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600061092e8360000183610a1e565b60001c905092915050565b6000610961836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610aa1565b905092915050565b600061097782600001610ac4565b9050919050565b600061098a8383610aa1565b6109e35782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506109e8565b600090505b92915050565b6000610a16836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610ad5565b905092915050565b600081836000018054905011610a7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111dc6022913960400191505060405180910390fd5b826000018281548110610a8e57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b60008083600101600084815260200190815260200160002054905060008114610bb15760006001820390506000600186600001805490500390506000866000018281548110610b2057fe5b9060005260206000200154905080876000018481548110610b3d57fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480610b7557fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610bb7565b60009150505b92915050565b6000610bd0610bcb8461105b565b61102a565b905082815260208101848484011115610be857600080fd5b610bf3848285611124565b509392505050565b600081359050610c0a81611168565b92915050565b600081359050610c1f8161117f565b92915050565b600081519050610c3481611196565b92915050565b600082601f830112610c4b57600080fd5b8135610c5b848260208601610bbd565b91505092915050565b600081359050610c73816111ad565b92915050565b600081519050610c88816111ad565b92915050565b600081519050610c9d816111c4565b92915050565b600060208284031215610cb557600080fd5b6000610cc384828501610c10565b91505092915050565b60008060408385031215610cdf57600080fd5b6000610ced85828601610c10565b9250506020610cfe85828601610bfb565b9150509250929050565b60008060408385031215610d1b57600080fd5b6000610d2985828601610c10565b9250506020610d3a85828601610c64565b9150509250929050565b600060208284031215610d5657600080fd5b600082013567ffffffffffffffff811115610d7057600080fd5b610d7c84828501610c3a565b91505092915050565b60008060408385031215610d9857600080fd5b600083013567ffffffffffffffff811115610db257600080fd5b610dbe85828601610c3a565b9250506020610dcf85828601610bfb565b9150509250929050565b600080600080600060a08688031215610df157600080fd5b6000610dff88828901610c8e565b9550506020610e1088828901610c25565b9450506040610e2188828901610c79565b9350506060610e3288828901610c79565b9250506080610e4388828901610c8e565b9150509295509295909350565b610e59816110b2565b82525050565b610e68816110c4565b82525050565b610e77816110d0565b82525050565b610e86816110da565b82525050565b6000610e978261108b565b610ea181856110a7565b9350610eb1818560208601611133565b80840191505092915050565b6000610eca601283611096565b91507f526f756e64206e6f7420636f6d706c65746500000000000000000000000000006000830152602082019050919050565b6000610f0a601a83611096565b91507f4f7261636c652063616e6e6f74206265203020616464726573730000000000006000830152602082019050919050565b610f4681611104565b82525050565b6000610f588284610e8c565b915081905092915050565b6000602082019050610f786000830184610e50565b92915050565b6000602082019050610f936000830184610e5f565b92915050565b6000602082019050610fae6000830184610e6e565b92915050565b6000602082019050610fc96000830184610e7d565b92915050565b60006020820190508181036000830152610fe881610ebd565b9050919050565b6000602082019050818103600083015261100881610efd565b9050919050565b60006020820190506110246000830184610f3d565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561105157611050611166565b5b8060405250919050565b600067ffffffffffffffff82111561107657611075611166565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006110bd826110e4565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015611151578082015181840152602081019050611136565b83811115611160576000848401525b50505050565bfe5b611171816110b2565b811461117c57600080fd5b50565b611188816110d0565b811461119357600080fd5b50565b61119f816110da565b81146111aa57600080fd5b50565b6111b681611104565b81146111c157600080fd5b50565b6111cd8161110e565b81146111d857600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212208b19d7e0d075e3270517b4245ef515467ba87e4f829a6f87ffa6d509971eec7964736f6c63430007060033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639010d07c1161008c578063a217fddf11610066578063a217fddf14610224578063c982aa1714610242578063ca15c87314610272578063d547741f146102a2576100cf565b80639010d07c146101a657806391d14854146101d6578063983d273714610206576100cf565b8063248a9ca3146100d45780632970fdfa146101045780632a0acc6a146101205780632f2ff15d1461013e57806336568abe1461015a578063524f388914610176575b600080fd5b6100ee60048036038101906100e99190610ca3565b6102be565b6040516100fb9190610f99565b60405180910390f35b61011e60048036038101906101199190610d85565b6102dd565b005b6101286103e1565b6040516101359190610f99565b60405180910390f35b61015860048036038101906101539190610ccc565b610405565b005b610174600480360381019061016f9190610ccc565b61048e565b005b610190600480360381019061018b9190610d44565b610527565b60405161019d9190610fb4565b60405180910390f35b6101c060048036038101906101bb9190610d08565b61063c565b6040516101cd9190610f63565b60405180910390f35b6101f060048036038101906101eb9190610ccc565b61066d565b6040516101fd9190610f7e565b60405180910390f35b61020e61069e565b60405161021b9190610f99565b60405180910390f35b61022c6106c2565b6040516102399190610f99565b60405180910390f35b61025c60048036038101906102579190610d44565b6106c9565b6040516102699190610f63565b60405180910390f35b61028c60048036038101906102879190610ca3565b610712565b604051610299919061100f565b60405180910390f35b6102bc60048036038101906102b79190610ccc565b610738565b005b6000806000838152602001908152602001600020600201549050919050565b6103077f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c3361066d565b61031057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610fef565b60405180910390fd5b806001836040516103919190610f4c565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b61042b600080848152602001908152602001600020600201546104266107f1565b61066d565b610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806111fe602f913960400191505060405180910390fd5b61048a82826107f9565b5050565b6104966107f1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061125d602f913960400191505060405180910390fd5b610523828261088c565b5050565b600080600060018460405161053c9190610f4c565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105b057600080fd5b505afa1580156105c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e89190610dd9565b5093505092505060008111610632576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062990610fcf565b60405180910390fd5b8192505050919050565b60006106658260008086815260200190815260200160002060000161091f90919063ffffffff16565b905092915050565b60006106968260008086815260200190815260200160002060000161093990919063ffffffff16565b905092915050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b6000801b81565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610731600080848152602001908152602001600020600001610969565b9050919050565b61075e600080848152602001908152602001600020600201546107596107f1565b61066d565b6107b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061122d6030913960400191505060405180910390fd5b6107bd828261088c565b5050565b60006107e9836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61097e565b905092915050565b600033905090565b610820816000808581526020019081526020016000206000016107c190919063ffffffff16565b156108885761082d6107f1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6108b3816000808581526020019081526020016000206000016109ee90919063ffffffff16565b1561091b576108c06107f1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600061092e8360000183610a1e565b60001c905092915050565b6000610961836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610aa1565b905092915050565b600061097782600001610ac4565b9050919050565b600061098a8383610aa1565b6109e35782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506109e8565b600090505b92915050565b6000610a16836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610ad5565b905092915050565b600081836000018054905011610a7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111dc6022913960400191505060405180910390fd5b826000018281548110610a8e57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b60008083600101600084815260200190815260200160002054905060008114610bb15760006001820390506000600186600001805490500390506000866000018281548110610b2057fe5b9060005260206000200154905080876000018481548110610b3d57fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480610b7557fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610bb7565b60009150505b92915050565b6000610bd0610bcb8461105b565b61102a565b905082815260208101848484011115610be857600080fd5b610bf3848285611124565b509392505050565b600081359050610c0a81611168565b92915050565b600081359050610c1f8161117f565b92915050565b600081519050610c3481611196565b92915050565b600082601f830112610c4b57600080fd5b8135610c5b848260208601610bbd565b91505092915050565b600081359050610c73816111ad565b92915050565b600081519050610c88816111ad565b92915050565b600081519050610c9d816111c4565b92915050565b600060208284031215610cb557600080fd5b6000610cc384828501610c10565b91505092915050565b60008060408385031215610cdf57600080fd5b6000610ced85828601610c10565b9250506020610cfe85828601610bfb565b9150509250929050565b60008060408385031215610d1b57600080fd5b6000610d2985828601610c10565b9250506020610d3a85828601610c64565b9150509250929050565b600060208284031215610d5657600080fd5b600082013567ffffffffffffffff811115610d7057600080fd5b610d7c84828501610c3a565b91505092915050565b60008060408385031215610d9857600080fd5b600083013567ffffffffffffffff811115610db257600080fd5b610dbe85828601610c3a565b9250506020610dcf85828601610bfb565b9150509250929050565b600080600080600060a08688031215610df157600080fd5b6000610dff88828901610c8e565b9550506020610e1088828901610c25565b9450506040610e2188828901610c79565b9350506060610e3288828901610c79565b9250506080610e4388828901610c8e565b9150509295509295909350565b610e59816110b2565b82525050565b610e68816110c4565b82525050565b610e77816110d0565b82525050565b610e86816110da565b82525050565b6000610e978261108b565b610ea181856110a7565b9350610eb1818560208601611133565b80840191505092915050565b6000610eca601283611096565b91507f526f756e64206e6f7420636f6d706c65746500000000000000000000000000006000830152602082019050919050565b6000610f0a601a83611096565b91507f4f7261636c652063616e6e6f74206265203020616464726573730000000000006000830152602082019050919050565b610f4681611104565b82525050565b6000610f588284610e8c565b915081905092915050565b6000602082019050610f786000830184610e50565b92915050565b6000602082019050610f936000830184610e5f565b92915050565b6000602082019050610fae6000830184610e6e565b92915050565b6000602082019050610fc96000830184610e7d565b92915050565b60006020820190508181036000830152610fe881610ebd565b9050919050565b6000602082019050818103600083015261100881610efd565b9050919050565b60006020820190506110246000830184610f3d565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561105157611050611166565b5b8060405250919050565b600067ffffffffffffffff82111561107657611075611166565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006110bd826110e4565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015611151578082015181840152602081019050611136565b83811115611160576000848401525b50505050565bfe5b611171816110b2565b811461117c57600080fd5b50565b611188816110d0565b811461119357600080fd5b50565b61119f816110da565b81146111aa57600080fd5b50565b6111b681611104565b81146111c157600080fd5b50565b6111cd8161110e565b81146111d857600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212208b19d7e0d075e3270517b4245ef515467ba87e4f829a6f87ffa6d509971eec7964736f6c63430007060033",
    "libraries": {
        "PoolSwapLibrary": "0xd046bC64854a7aF5bB61C207A9B2636148B04CAf"
    },
    "devdoc": {
        "kind": "dev",
        "methods": {
            "getPrice(string)": {
                "params": {
                    "marketCode": "The market code for the asset to quote for."
                },
                "returns": {
                    "_0": "The latest price"
                }
            },
            "getRoleAdmin(bytes32)": {
                "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
            },
            "getRoleMember(bytes32,uint256)": {
                "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
            },
            "getRoleMemberCount(bytes32)": {
                "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
            },
            "grantRole(bytes32,address)": {
                "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
            },
            "hasRole(bytes32,address)": {
                "details": "Returns `true` if `account` has been granted `role`."
            },
            "renounceRole(bytes32,address)": {
                "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
            },
            "revokeRole(bytes32,address)": {
                "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
            },
            "setOracle(string,address)": {
                "details": "Should be secured, ideally only allowing the PoolKeeper to access.",
                "params": {
                    "marketCode": "The market code for the market.",
                    "oracle": "The oracle to set for the market"
                }
            }
        },
        "stateVariables": {
            "assetOracles": {
                "details": "override in place for the getter function definition from the interface"
            }
        },
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "OPERATOR()": {
                "notice": "Use the Operator role to restrict access to the setOracle function"
            },
            "assetOracles(string)": {
                "notice": "Format: Market code => oracle address. Market code looks like TSLA/USD+aDAI"
            },
            "getPrice(string)": {
                "notice": "Returns the current price for the asset in question"
            },
            "setOracle(string,address)": {
                "notice": "Sets the oracle for a given market"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 142,
                "contract": "contracts/implementation/OracleWrapper.sol:OracleWrapper",
                "label": "_roles",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)138_storage)"
            },
            {
                "astId": 8699,
                "contract": "contracts/implementation/OracleWrapper.sol:OracleWrapper",
                "label": "assetOracles",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_string_memory_ptr,t_address)"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
                "base": "t_bytes32",
                "encoding": "dynamic_array",
                "label": "bytes32[]",
                "numberOfBytes": "32"
            },
            "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)138_storage)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => struct AccessControl.RoleData)",
                "numberOfBytes": "32",
                "value": "t_struct(RoleData)138_storage"
            },
            "t_mapping(t_bytes32,t_uint256)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
                "encoding": "mapping",
                "key": "t_string_memory_ptr",
                "label": "mapping(string => address)",
                "numberOfBytes": "32",
                "value": "t_address"
            },
            "t_string_memory_ptr": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2258_storage": {
                "encoding": "inplace",
                "label": "struct EnumerableSet.AddressSet",
                "members": [
                    {
                        "astId": 2257,
                        "contract": "contracts/implementation/OracleWrapper.sol:OracleWrapper",
                        "label": "_inner",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(Set)1993_storage"
                    }
                ],
                "numberOfBytes": "64"
            },
            "t_struct(RoleData)138_storage": {
                "encoding": "inplace",
                "label": "struct AccessControl.RoleData",
                "members": [
                    {
                        "astId": 135,
                        "contract": "contracts/implementation/OracleWrapper.sol:OracleWrapper",
                        "label": "members",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_struct(AddressSet)2258_storage"
                    },
                    {
                        "astId": 137,
                        "contract": "contracts/implementation/OracleWrapper.sol:OracleWrapper",
                        "label": "adminRole",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes32"
                    }
                ],
                "numberOfBytes": "96"
            },
            "t_struct(Set)1993_storage": {
                "encoding": "inplace",
                "label": "struct EnumerableSet.Set",
                "members": [
                    {
                        "astId": 1988,
                        "contract": "contracts/implementation/OracleWrapper.sol:OracleWrapper",
                        "label": "_values",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                        "astId": 1992,
                        "contract": "contracts/implementation/OracleWrapper.sol:OracleWrapper",
                        "label": "_indexes",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_mapping(t_bytes32,t_uint256)"
                    }
                ],
                "numberOfBytes": "64"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
